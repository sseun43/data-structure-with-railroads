> # Test removing a station
> clear_all
Cleared all stations
> station_count
Number of stations: 0
> # Remove non-existing
> remove_station 33
Failed (NO_STATION returned)!
> # Add stations, regions and containment
> add_station xx "Notown" (100,0)
Station:
   Notown: pos=(100,0), id=xx
> add_station 123456 "Sector7" (0,0)
Station:
   Sector7: pos=(0,0), id=123456
> add_station 654321 "Segment2" (6,6)
Station:
   Segment2: pos=(6,6), id=654321
> stations_distance_increasing
Stations:
1. Sector7: pos=(0,0), id=123456
2. Segment2: pos=(6,6), id=654321
3. Notown: pos=(100,0), id=xx
> stations_alphabetically
Stations:
1. Notown: pos=(100,0), id=xx
2. Sector7: pos=(0,0), id=123456
3. Segment2: pos=(6,6), id=654321
> station_count
Number of stations: 3
> add_region 321 "Area9" (3,3) (3,4) (4,5)
Region:
   Area9: id=321
> add_region 123 "Region6" (2,2) (1,1) (1,2)
Region:
   Region6: id=123
> all_regions
Regions:
1. Region6: id=123
2. Area9: id=321
> add_station_to_region 123456 321
Added 'Sector7' to region 'Area9'
Station:
   Sector7: pos=(0,0), id=123456
Region:
   Area9: id=321
> add_station_to_region 654321 123
Added 'Segment2' to region 'Region6'
Station:
   Segment2: pos=(6,6), id=654321
Region:
   Region6: id=123
> find_stations_with_coord (100,0)
Station:
   Notown: pos=(100,0), id=xx
> # Remove station
> stations_alphabetically
Stations:
1. Notown: pos=(100,0), id=xx
2. Sector7: pos=(0,0), id=123456
3. Segment2: pos=(6,6), id=654321
> stations_distance_increasing
Stations:
1. Sector7: pos=(0,0), id=123456
2. Segment2: pos=(6,6), id=654321
3. Notown: pos=(100,0), id=xx
> remove_station xx
Notown removed.
> stations_distance_increasing
Stations:
1. Sector7: pos=(0,0), id=123456
2. Segment2: pos=(6,6), id=654321
> stations_alphabetically
Stations:
1. Sector7: pos=(0,0), id=123456
2. Segment2: pos=(6,6), id=654321
> all_stations
Stations:
1. Sector7: pos=(0,0), id=123456
2. Segment2: pos=(6,6), id=654321
> # Test region containment
> station_in_regions xx
Station:
   !NO_NAME!: pos=(--NO_COORD--), id=xx
Failed (NO_REGION returned)!
> find_stations_with_coord (100,0)
No stations found!
> # Remove another
> stations_distance_increasing
Stations:
1. Sector7: pos=(0,0), id=123456
2. Segment2: pos=(6,6), id=654321
> remove_station 654321
Segment2 removed.
> stations_distance_increasing
Station:
   Sector7: pos=(0,0), id=123456
> # add a station with same ID
> add_station xx "yay" (1,1)
Station:
   yay: pos=(1,1), id=xx
> stations_distance_increasing
Stations:
1. Sector7: pos=(0,0), id=123456
2. yay: pos=(1,1), id=xx
> stations_alphabetically
Stations:
1. Sector7: pos=(0,0), id=123456
2. yay: pos=(1,1), id=xx
> all_stations
Stations:
1. Sector7: pos=(0,0), id=123456
2. yay: pos=(1,1), id=xx
> # add the exact same as previous removed one
> remove_station xx
yay removed.
> add_station xx "yay" (1,1)
Station:
   yay: pos=(1,1), id=xx
> stations_distance_increasing
Stations:
1. Sector7: pos=(0,0), id=123456
2. yay: pos=(1,1), id=xx
> stations_alphabetically
Stations:
1. Sector7: pos=(0,0), id=123456
2. yay: pos=(1,1), id=xx
> all_stations
Stations:
1. Sector7: pos=(0,0), id=123456
2. yay: pos=(1,1), id=xx
> # test removing non unique coordinated station
> clear_all
Cleared all stations
> add_station A "A" (10,10)
Station:
   A: pos=(10,10), id=A
> add_station B "B" (1,1)
Station:
   B: pos=(1,1), id=B
> add_station C "C" (1,1)
Station:
   C: pos=(1,1), id=C
> stations_distance_increasing
Stations:
1. B: pos=(1,1), id=B
2. C: pos=(1,1), id=C
3. A: pos=(10,10), id=A
> all_stations
Stations:
1. A: pos=(10,10), id=A
2. B: pos=(1,1), id=B
3. C: pos=(1,1), id=C
> remove_station C
C removed.
> stations_distance_increasing
Stations:
1. B: pos=(1,1), id=B
2. A: pos=(10,10), id=A
> all_stations
Stations:
1. A: pos=(10,10), id=A
2. B: pos=(1,1), id=B
> 
